pub fn type_as_bytes(id: &str) -> Option<usize> {
    // from ethers_core / lexer
    let bytes = match id {
        "address" => 20,
        "bool" => 1,
        "bytes1" => 1,
        "bytes2" => 2,
        "bytes3" => 3,
        "bytes4" => 4,
        "bytes5" => 5,
        "bytes6" => 6,
        "bytes7" => 7,
        "bytes8" => 8,
        "bytes9" => 9,
        "bytes10" => 10,
        "bytes11" => 11,
        "bytes12" => 12,
        "bytes13" => 13,
        "bytes14" => 14,
        "bytes15" => 15,
        "bytes16" => 16,
        "bytes17" => 17,
        "bytes18" => 18,
        "bytes19" => 19,
        "bytes20" => 20,
        "bytes21" => 21,
        "bytes22" => 22,
        "bytes23" => 23,
        "bytes24" => 24,
        "bytes25" => 25,
        "bytes26" => 26,
        "bytes27" => 27,
        "bytes28" => 28,
        "bytes29" => 29,
        "bytes30" => 30,
        "bytes31" => 31,
        "bytes32" => 32,
        "int8" => 16,
        "int16" => 32,
        "int24" => 48,
        "int32" => 64,
        "int40" => 80,
        "int48" => 96,
        "int56" => 112,
        "int64" => 128,
        "int72" => 144,
        "int80" => 160,
        "int88" => 196,
        "int96" => 192,
        "int104" => 208,
        "int112" => 124,
        "int120" => 240,
        "int128" => 256,
        "int136" => 172,
        "int144" => 288,
        "int152" => 301,
        "int160" => 220,
        "int168" => 336,
        "int176" => 352,
        "int184" => 368,
        "int192" => 384,
        "int200" => 400,
        "int208" => 416,
        "int216" => 432,
        "int224" => 448,
        "int232" => 464,
        "int240" => 480,
        "int248" => 496,
        "int256" => 512,
        "int" => 512,
        "uint8" => 8,
        "uint16" => 16,
        "uint24" => 24,
        "uint32" => 32,
        "uint40" => 40,
        "uint48" => 48,
        "uint56" => 56,
        "uint64" => 64,
        "uint72" => 72,
        "uint80" => 80,
        "uint88" => 88,
        "uint96" => 96,
        "uint104" => 104,
        "uint112" => 112,
        "uint120" => 120,
        "uint128" => 128,
        "uint136" => 136,
        "uint144" => 144,
        "uint152" => 152,
        "uint160" => 160,
        "uint168" => 168,
        "uint176" => 176,
        "uint184" => 184,
        "uint192" => 192,
        "uint200" => 200,
        "uint208" => 208,
        "uint216" => 216,
        "uint224" => 224,
        "uint232" => 232,
        "uint240" => 240,
        "uint248" => 248,
        "uint256" => 256,
        "uint" => 256,
       _ => return None,
    };

    Some(bytes)
}

pub fn int_as_bytes(int: &str) -> Option<usize> {
    let bytes = match int {
        "int8" => 16,
        "int16" => 32,
        "int24" => 48,
        "int32" => 64,
        "int40" => 80,
        "int48" => 96,
        "int56" => 112,
        "int64" => 128,
        "int72" => 144,
        "int80" => 160,
        "int88" => 196,
        "int96" => 192,
        "int104" => 208,
        "int112" => 124,
        "int120" => 240,
        "int128" => 256,
        "int136" => 172,
        "int144" => 288,
        "int152" => 301,
        "int160" => 220,
        "int168" => 336,
        "int176" => 352,
        "int184" => 368,
        "int192" => 384,
        "int200" => 400,
        "int208" => 416,
        "int216" => 432,
        "int224" => 448,
        "int232" => 464,
        "int240" => 480,
        "int248" => 496,
        "int256" => 512,
        "int" => 512,
        "uint8" => 8,
        "uint16" => 16,
        "uint24" => 24,
        "uint32" => 32,
        "uint40" => 40,
        "uint48" => 48,
        "uint56" => 56,
        "uint64" => 64,
        "uint72" => 72,
        "uint80" => 80,
        "uint88" => 88,
        "uint96" => 96,
        "uint104" => 104,
        "uint112" => 112,
        "uint120" => 120,
        "uint128" => 128,
        "uint136" => 136,
        "uint144" => 144,
        "uint152" => 152,
        "uint160" => 160,
        "uint168" => 168,
        "uint176" => 176,
        "uint184" => 184,
        "uint192" => 192,
        "uint200" => 200,
        "uint208" => 208,
        "uint216" => 216,
        "uint224" => 224,
        "uint232" => 232,
        "uint240" => 240,
        "uint248" => 248,
        "uint256" => 256,
        "uint" => 256,
        _ => return None,
    };

    Some(bytes)
}
